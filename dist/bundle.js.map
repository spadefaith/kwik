{
  "version": 3,
  "sources": ["../src/index.ts", "../src/utils/el.ts", "../src/utils/loop.ts", "../src/services/jsx.ts", "../src/consts/component-lifecycle.ts", "../src/services/custom.ts", "../src/utils/rand.ts", "../src/utils/array.ts", "../src/services/event-bus.ts", "../src/services/signal.ts", "../src/components.ts", "../src/blueprint.ts", "../src/utils/append.ts"],
  "sourcesContent": ["import Component from \"./components\";\nimport Signal from \"./services/signal\";\nimport Blueprint from \"./blueprint\";\nimport render from \"./utils/append\";\nimport EventBus from \"./services/event-bus\";\nexport { render, Component, Blueprint, Signal, EventBus };\n", "export const getComments = (node, target?) => {\n  const xPath = \"//comment()\",\n    result = [];\n\n  let query = document.evaluate(\n    xPath,\n    node,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n\n  for (let i = 0, length = query.snapshotLength; i < length; ++i) {\n    const item: any = query.snapshotItem(i);\n    if (target) {\n      if (target == item.nodeValue) {\n        result.push(item);\n      }\n    } else {\n      result.push(item);\n    }\n  }\n\n  return result;\n};\n\nexport const stringToHTML = (str) => {\n  const parser = new DOMParser();\n\n  const doc = parser.parseFromString(str, \"text/html\");\n\n  return doc.body;\n};\n", "export const loop = (array, callback) => {\n  if (!array) return;\n\n  switch (array.constructor.name) {\n    case \"Array\": {\n      for (let i = 0; i < array.length; i++) {\n        callback(array[i], i);\n      }\n      break;\n    }\n    case \"Object\": {\n      for (let key in array) {\n        callback(array[key], key);\n      }\n      break;\n    }\n    case \"Map\": {\n      for (let [key, value] of array.entries()) {\n        callback(value, key);\n      }\n      break;\n    }\n    default: {\n      if (array.length) {\n        for (let i = 0; i < array.length; i++) {\n          callback(array[i], i);\n        }\n      }\n    }\n  }\n};\n", "import { stringToHTML } from \"../utils/el\";\nimport { loop } from \"../utils/loop\";\n\nexport default class JSXProcess {\n  renderFunction: null | (() => any);\n  component: any;\n  jsx: any;\n  events: any[];\n  signals: any[];\n  constructor(component) {\n    this.component = component;\n    const ctx = component.template;\n    this.renderFunction = null;\n\n    if (typeof ctx == \"function\") {\n      this.renderFunction = ctx;\n      this.jsx = ctx();\n    } else {\n      this.jsx = ctx;\n    }\n  }\n\n  toHtml() {\n    const str = this.jsx;\n    const html = stringToHTML(str);\n\n    loop(this.component.events, (event) => {\n      const { type, id, handler } = event;\n      const target: HTMLElement = html.querySelector(\n        `[data-event=${type}-${id}]`\n      );\n      if (target) {\n        target.addEventListener(type, (e) => {\n          handler(e);\n        });\n      }\n    });\n\n    return { str, html };\n  }\n}\n", "export const RENDERED = \"rendered\";\nexport const DESTROY = \"destroy\";\nexport const CHANGE = \"change\";\nexport const ADOPTED = \"adopted\";\nexport const COMPONENT_LIFECYCLE = { RENDERED, DESTROY, CHANGE, ADOPTED };\n", "import JSXProcess from \"./jsx\";\nimport { stringToHTML } from \"../utils/el\";\nimport EventBus from \"./event-bus\";\nimport { loop } from \"../utils/loop\";\nimport { COMPONENT_LIFECYCLE } from \"../consts/component-lifecycle\";\n\nconst Custom = (component, lifecycle: EventBus) => {\n  const id = component.id,\n    name = component.name,\n    attributes = component.attributes.map((item) => item.name),\n    template = component.template;\n\n  let vdom = new JSXProcess(component);\n  let tempalateHtml = null;\n  let initialInnerHtml: any = \"\";\n\n  if (customElements.get(name)) {\n    return customElements.get(name);\n  }\n\n  customElements.define(\n    name,\n    class extends HTMLElement {\n      static observedAttributes = [...attributes, \"key\"];\n\n      constructor() {\n        super();\n\n        initialInnerHtml = stringToHTML(this.innerHTML);\n\n        this.innerHTML = \"\";\n      }\n      connectedCallback() {\n        if (typeof template == \"function\") {\n          const { str, html } = vdom.toHtml();\n\n          tempalateHtml = html;\n        } else {\n          tempalateHtml = template;\n        }\n\n        this._replaceSlot(initialInnerHtml, tempalateHtml);\n\n        loop(initialInnerHtml.childNodes, (child) => this.appendChild(child));\n        loop(tempalateHtml.childNodes, (child) => this.appendChild(child));\n\n        lifecycle.broadcast(COMPONENT_LIFECYCLE.RENDERED, this);\n      }\n      disconnectedCallback() {\n        lifecycle.broadcast(COMPONENT_LIFECYCLE.DESTROY, this);\n      }\n\n      adoptedCallback() {\n        lifecycle.broadcast(COMPONENT_LIFECYCLE.ADOPTED, this);\n      }\n      attributeChangedCallback(name, oldValue, newValue) {\n        lifecycle.broadcast(COMPONENT_LIFECYCLE.CHANGE, {\n          name,\n          oldValue,\n          newValue,\n        });\n      }\n\n      _replaceSlot(src, target) {\n        const slots = src.querySelectorAll(\"[slot]\");\n\n        loop(slots, (slot, i) => {\n          const slotName = slot.getAttribute(\"slot\");\n          const targetSlot = target.querySelector(`slot[name=${slotName}]`);\n          if (targetSlot) {\n            const attributes = targetSlot.attributes;\n\n            loop(attributes, (attr) => {\n              if (attr.name == \"name\") return;\n              slot.setAttribute(attr.name, attr.value);\n            });\n\n            slot.removeAttribute(\"slot\");\n\n            targetSlot.replaceWith(slot);\n          } else {\n            slot.remove();\n          }\n        });\n        /*\n          remove slots without substiture;\n        */\n        const targetSlots = target.querySelectorAll(\"slot[name]\");\n        loop(targetSlots, (slot, i) => slot.remove());\n      }\n    }\n  );\n\n  return customElements.get(name);\n};\n\nexport default Custom;\n", "export const generateId = () => `a${crypto.randomUUID().replaceAll(\"-\", \"\")}a`;\n", "export default class ArrayWrapper {\n  constructor(public array) {\n    this.array = array;\n  }\n  get data() {\n    if (Array.isArray(this.array)) {\n      return this;\n    } else {\n      return this.array;\n    }\n  }\n  each(callback) {\n    return this.array.map(callback).join(\"\");\n  }\n}\n", "import { loop } from \"../utils/loop\";\n\nexport default class EventBus {\n  subscriber: any;\n  constructor() {\n    this.subscriber = {};\n  }\n\n  on(event, callback) {\n    if (!this.subscriber[event]) {\n      this.subscriber[event] = [];\n    }\n\n    this.subscriber[event].push(callback);\n  }\n\n  broadcast(event, data) {\n    loop(this.subscriber[event], (callback) => {\n      callback(data);\n    });\n  }\n\n  clean(event) {\n    if (event) {\n      this.subscriber[event] && (this.subscriber[event] = []);\n    } else {\n      loop(this.subscriber, (event) => {\n        this.subscriber[event] = [];\n      });\n    }\n  }\n}\n", "import { generateId } from \"../utils/rand\";\nimport EventBus from \"./event-bus\";\n\nexport default class Signal {\n  id: string;\n  _value: any;\n  subscribers: any[];\n  pubsub: EventBus;\n  constructor(initialValue) {\n    this.id = generateId();\n    this._value = initialValue;\n    this.subscribers = [];\n    this.pubsub = new EventBus();\n  }\n  _notify() {\n    this.pubsub.broadcast(\"signal\", this._value);\n  }\n  get value() {\n    return this._value;\n  }\n  set value(v) {\n    this._value = v;\n    this._notify();\n  }\n  subscribe(subscriber) {\n    this.pubsub.on(\"signal\", subscriber);\n  }\n\n  toString() {\n    return this._value.toString();\n  }\n\n  get isSignal() {\n    return true;\n  }\n}\n", "import Custom from \"./services/custom\";\nimport { generateId } from \"./utils/rand\";\nimport { getComments, stringToHTML } from \"./utils/el\";\nimport ArrayWrapper from \"./utils/array\";\nimport EventBus from \"./services/event-bus\";\nimport Signal from \"./services/signal\";\nimport { loop } from \"./utils/loop\";\nimport { COMPONENT_LIFECYCLE } from \"./consts/component-lifecycle\";\nexport type AttributesItemType = {\n  signal: string;\n  name: string;\n};\n\nexport type SignalItemType = {\n  [key: string]: {\n    signal: Signal;\n    callbacks?: ((a: any) => any)[];\n  };\n};\n\nconst Component = class {\n  name: string;\n  id: string;\n  attributes: AttributesItemType[];\n  template: any;\n  callback: any;\n  custom: any;\n  componentCallback: any;\n  componentDisconnectCallback: any;\n  signals: SignalItemType;\n  styles: any;\n  events: any;\n  lifecycle: EventBus;\n  props: any;\n\n  constructor(callback) {\n    this.callback = callback;\n    this.id = generateId();\n    this.name = `x-${this.id}`;\n\n    this.attributes = [];\n    this.template = {};\n    this.signals = {};\n    this.styles = {};\n    this.events = [];\n\n    this.lifecycle = new EventBus();\n    this._initLifecycle();\n    this._createTemplate();\n    this._createCustom();\n  }\n  _initLifecycle() {\n    this.lifecycle.on(COMPONENT_LIFECYCLE.RENDERED, (el) => {\n      loop(this.styles, (styles, id) => {\n        const target: HTMLElement = document.querySelector(\n          `[data-style=${id}]`\n        );\n        if (!target) return;\n        loop(styles, (key) => {\n          target.style[key] = styles[key];\n        });\n      });\n    });\n    this.lifecycle.on(COMPONENT_LIFECYCLE.RENDERED, (el) => {\n      loop(this.signals, (a) => {\n        const { signal, callbacks } = a;\n        if (!callbacks.length) return;\n\n        loop(callbacks, (callback) => {\n          callback && callback(signal.value);\n        });\n      });\n    });\n\n    this.lifecycle.on(\n      COMPONENT_LIFECYCLE.CHANGE,\n      ({ name, oldValue, newValue }) => {\n        const getSignalId = this.attributes.find((item) => item.name == name);\n        if (!getSignalId) return;\n\n        const conf = this.signals[getSignalId?.signal];\n        if (oldValue != newValue) {\n          conf.signal.value = newValue;\n        }\n      }\n    );\n\n    this.lifecycle.on(COMPONENT_LIFECYCLE.DESTROY, () => {\n      this.attributes = [];\n      this.template = {};\n      this.signals = {};\n      this.styles = {};\n      this.events = [];\n    });\n  }\n  _createTemplate() {\n    const template = this.callback({\n      node: this._nodeCallback.bind(this),\n      render: this._renderCallback.bind(this),\n      attr: this._attrCallback.bind(this),\n      events: this._eventsCallback.bind(this),\n      props: this._propsCallback.bind(this),\n      style: this._styleCallback.bind(this),\n      ref: this._refCallback.bind(this),\n      signal: (value) => {\n        return new Signal(value);\n      },\n      onConnected: this._connectedCallback.bind(this),\n    });\n\n    this.template = template;\n  }\n  _refCallback(callback?) {\n    const id = generateId();\n    if (!callback) return;\n\n    this.lifecycle.on(COMPONENT_LIFECYCLE.RENDERED, () => {\n      const target: HTMLElement = document.querySelector(`[data-ref=${id}]`);\n      callback(target);\n    });\n\n    return {\n      get current() {\n        return document.querySelector(`[data-ref=${id}]`);\n      },\n      toString() {\n        return `data-ref=${id}`;\n      },\n    };\n  }\n  _styleCallback(obj) {\n    const id = generateId();\n    this.styles[id] = obj;\n    loop(obj, (key) => {\n      const value = obj[key];\n\n      if (!value.isSignal) return;\n      const callback = (v) => {\n        const target: HTMLElement = document.querySelector(\n          `[data-style=${id}]`\n        );\n        if (target) {\n          target.style[key] = v;\n        }\n      };\n      this._registerSignal(value, callback);\n\n      value.subscribe(callback);\n    });\n    return `data-style=${id}`;\n  }\n  _propsCallback(name, initialValue) {\n    const signal = new Signal(initialValue);\n    this.attributes.push({ signal: signal.id, name });\n\n    this._registerSignal(signal);\n\n    return signal;\n  }\n  _connectedCallback(callback) {\n    this.lifecycle.on(COMPONENT_LIFECYCLE.RENDERED, callback);\n    this.lifecycle.on(COMPONENT_LIFECYCLE.DESTROY, () => callback());\n  }\n  _eventsCallback(events) {\n    let str = \"\";\n    loop(events, (handler, key) => {\n      const id = generateId();\n      this.events.push({\n        id,\n        type: key,\n        handler,\n      });\n      str += `data-event=${key}-${id} `;\n    });\n\n    return str;\n  }\n  _attrCallback(attr, signal) {\n    if (!signal.isSignal) return;\n    this._registerSignal(signal);\n    signal.subscribe((value) => {});\n    return `${attr}=${signal}`;\n  }\n  _nodeCallback(signal) {\n    this._registerSignal(signal);\n\n    signal.subscribe((value) => {\n      const id = signal.id;\n\n      const self = document.querySelector(this.name);\n\n      if (!self) {\n        return;\n      }\n\n      setTimeout(() => {\n        const node = getComments(self, `node ${id}`);\n\n        if (!node.length) {\n          return;\n        }\n\n        loop(node, (n) => {\n          const next = n.nextSibling;\n\n          if (next.nodeType == 3) {\n            if (next.nodeValue[0] == \" \") {\n              next.nodeValue = ` ${signal}`;\n            } else {\n              next.nodeValue = signal;\n            }\n          }\n        });\n      });\n    });\n\n    return `<!--node ${signal.id}--> ${signal}`;\n  }\n  _renderCallback(signal, template, opts: any = {}) {\n    const templateType = typeof template;\n\n    if (opts.replace == undefined) {\n      opts.replace = templateType == \"string\" ? true : false;\n    }\n\n    const callback = (value) => {\n      if (Array.isArray(value)) {\n        value = new ArrayWrapper(value).data;\n      }\n\n      const id = signal.id;\n      const self = document.querySelector(this.name);\n\n      if (!self) {\n        return;\n      }\n\n      const node = getComments(self, `render ${id}`);\n      if (!node.length) {\n        return;\n      }\n      loop(node, (n) => {\n        let r = null;\n\n        switch (templateType) {\n          case \"string\":\n            {\n              if (opts.renderer) {\n                r = opts.renderer.render(template, {\n                  list: value,\n                });\n              } else {\n                throw new Error(\"renderer is required\");\n              }\n            }\n            break;\n          case \"function\":\n            {\n              r = template(value);\n            }\n            break;\n        }\n        if (!n.isInitialized) {\n          n.isInitialized = true;\n        }\n        if (n.isInitialized) {\n          if (opts.replace) {\n            const next = n.nextSibling;\n            next.remove();\n          }\n        }\n        if (!r) {\n          return;\n        }\n        const rHtml = stringToHTML(r);\n        n.parentElement.insertBefore(rHtml.firstChild, n.nextSibling);\n      });\n    };\n\n    signal.subscribe((value) => setTimeout(() => callback(value)));\n    this._registerSignal(signal, (value) => setTimeout(() => callback(value)));\n\n    return `<!--render ${signal.id}-->`;\n  }\n  _createCustom() {\n    this.custom = Custom(this, this.lifecycle);\n  }\n  _registerSignal(signal, callback?) {\n    if (!this.signals[signal.id]) {\n      this.signals[signal.id] = { signal, callbacks: [] };\n    }\n\n    callback && this.signals[signal.id].callbacks.push(callback);\n  }\n};\n\nexport default Component;\n", "import Component from \"./components\";\n\ntype ParamsType = {\n  node: (str) => any;\n  attr: (str) => any;\n  signal: (any) => any;\n};\nexport default class Blueprint {\n  callback: any;\n  current: any;\n  /**\n   * @param {(params: ParamsType) => void} callback - The callback function that accepts an object with methods `node`, `attr`, and `signal`.\n   */\n  constructor(callback) {\n    this.callback = callback;\n    this.current = null;\n  }\n  build() {\n    this.current = new Component(this.callback);\n    return this.current.name;\n  }\n  toString() {\n    return this.build();\n  }\n\n  get close() {\n    return this.current.name;\n  }\n}\n", "export default function render(target, component) {\n  target.innerHTML = \"\";\n  target.appendChild(document.createElement(`${component}`));\n}\n"],
  "mappings": "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",
  "names": ["name", "attributes", "event"]
}
